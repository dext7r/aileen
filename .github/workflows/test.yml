name: test
permissions:
  contents: write
on:
  push:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [14.x, 15.x, 16.x, 17.x, 18.x, 19.x, 20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies 📦
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('packages/core/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Use Node.js ${{ matrix.node-version }} 🚀
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm 🚀
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Install dependencies 🚀
        run: pnpm install

      - name: Lint and fix code ✨
        run: |
          cd packages/core
          echo "🔍 Linting..."
          pnpm lint
          echo "🔧 Fixing lint issues..."
          pnpm lint:fix

      - name: Format code ✨
        run: |
          cd packages/core
          echo "🖌️ Formatting..."
          pnpm format

      - name: Build 🏗️
        run: |
          cd packages/core
          echo "🚀 Building..."
          pnpm run build
        if: success() && matrix.os == 'ubuntu-latest'
